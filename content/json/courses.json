{"learn-to-code-with-godot":{"title":"Learn to Code From Zero With Godot","slug":"learn-to-code-from-zero-with-godot","description":"Make your family and friends proud. Learn skills in high demand by creating fun toys and games. Finally become a game developer!","thumbnail":"images/course-thumbnail.png","draft":false,"price":99,"tags":[],"sections":[{"title":"Introduction","slug":"introduction","draft":false,"lessons":[{"title":"What you'll learn in the course","slug":"what-you-ll-learn-in-the-course","free":true,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/introduction/what-you-ll-learn-in-the-course","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      img: \"img\",\n      em: \"em\",\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\",\n      h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"what-youll-learn-in-the-course\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#what-youll-learn-in-the-course\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"What you'll learn in the course\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Welcome to Learn to Code From Zero with Godot, and thanks for supporting Godot and GDQuest.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.learn-to-code-illustration.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/courses/learn-to-code-from-zero-with-godot/introduction/images/01.learn-to-code-illustration.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We made this course based on many requests in the Godot community to teach them to code by making games.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"There's an issue with most courses: they don't teach you what you need to know to become an \", _jsx(_components.em, {\n          children: \"independent developer\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"By \", _jsx(_components.em, {\n          children: \"independent\"\n        }), \", I mean taking your ideas and translating them into computer code without constantly needing tutorials.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.independent-programmer.jpg\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"There is a specific mindset and many techniques programmers follow to get work done efficiently.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Professionals don't rely on tutorials or step-by-step guides to get their work done.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Instead, they solve problems by discussing with peers, using a code reference, reading code, and, most of all, experimenting.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We call this mindset \", _jsx(_components.em, {\n          children: \"thinking like a programmer\"\n        }), \". It is a mix of creative problem-solving and translating ideas into things the computer can do.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"making-the-computer-do-what-you-want\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#making-the-computer-do-what-you-want\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Making the computer do what you want\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The essence of programming is \", _jsx(_components.em, {\n          children: \"making the computer do what you want it to do\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"It's not simple, as computers are dumb rocks struck by lightning. You have to give them exact instructions using a programming language, which is very different from using a natural language.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.gdscript-code.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"To get there, this course will teach you:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Over 100 general and game-specific programming concepts.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"The skills to think like a programmer by creatively solving problems and translating your ideas into instructions for the computer.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"The divide and conquer method to solve any programming challenge.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"And more.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Our goal is to make you an \", _jsx(_components.em, {\n          children: \"independent\"\n        }), \" programmer by the end of the course.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We don't pretend to turn you into a professional with a single course. Getting there will take years of experience.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"However, we want to give you the mindset and tools to:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Create simple games without needing tutorials for everything.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Learn more and grow on your own, and make the most of the massive amount of learning resources out there.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Have a pleasant time experimenting with code and the results you get.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The third point is crucial to us.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-course-we-wish-we-had-when-we-started\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#the-course-we-wish-we-had-when-we-started\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"The course we wish we had when we started\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We decided to create a course that would be serious about what it teaches while keeping things exciting and engaging for you.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"your-first-steps-assembling-a-game\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#your-first-steps-assembling-a-game\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Your first steps: assembling a game\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the first module, you will get a rough sense of how you make games with the Godot game engine.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We will give you pre-made components to assemble into a game.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This is so you can see that we build games from separate blocks. You will also see the kind of game you will get to create by the end of the course.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.path-of-sorcerers-title.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Even if you are not fond of action games, the point of the final project is to teach you essential techniques that'll help you in all your adventures.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"At first, you won't be able to program \", _jsx(_components.em, {\n          children: \"your dream game\"\n        }), \". Some kinds of games are surprisingly tricky to create.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"That's why we chose this action game: it's a project designed specifically for learning.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.path-of-sorcerers-screenshot.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"coding-foundations-the-learn-gdscript-app\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#coding-foundations-the-learn-gdscript-app\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Coding foundations: the Learn GDScript app\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the second module, you will learn the foundations of the GDScript programming language, which we will use throughout the rest of the course.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For that, we created a \", _jsx(_components.a, {\n          href: \"https://github.com/GDQuest/learn-gdscript/\",\n          children: \"free and open-source app\"\n        }), \" that anyone in the Godot community can use.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.gdscript-learn-app.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This app makes it much easier to take your first steps with the language. It puts you in a friendly environment to get started with many interactive practices.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This will give you the necessary foundations to later get into the Godot game engine itself.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.practice-inventory.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Note that while you'll learn a specific programming language, the skills you'll build will stick with you all your life.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Game developers learn many technologies, and professionals often work with multiple languages.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Even when you learn a new game engine or programming language, \", _jsx(_components.em, {\n          children: \"you'll be able to apply much of what you'll learn in this course\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"building-skills-by-creating-small-toys-and-games\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#building-skills-by-creating-small-toys-and-games\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Building skills by creating small toys and games\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"After completing the app, you'll build up game development skills by creating many small projects. Their size and complexity will vary to focus on specific learning points.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"For instance, the first project will teach you Godot's four essential concepts by coding a ship you can control with the keyboard.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.ship-with-steering.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"final-project-creating-your-own-game\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#final-project-creating-your-own-game\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Final project: creating your own game\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The final module will get you to create a complete game, but not in the form of a complete step-by-step tutorial.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Instead, we'll guide you through \", _jsx(_components.em, {\n          children: \"some\"\n        }), \" steps and challenge you in other parts. We'll provide everything you need not to get lost, and, of course, we'll be there to give you the support you need.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/01.final-game-project.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Throughout the rest of the introduction, we will explain:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"What you should expect from the course.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"What learning to code is like.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Our approach to teaching you to code.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the next part, we will talk about how you can make the most of the course.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"What you'll learn in the course","slug":"what-you-ll-learn-in-the-course","draft":false,"free":true}},"prev":null,"next":{"title":"How to make most of Learn to Code From Zero With Godot","url":"/course/learn-to-code-from-zero-with-godot/introduction/how-to-make-most-of-learn-to-code-from-zero-with-godot"}},{"title":"How to make most of Learn to Code From Zero With Godot","slug":"how-to-make-most-of-learn-to-code-from-zero-with-godot","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/introduction/how-to-make-most-of-learn-to-code-from-zero-with-godot","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      strong: \"strong\",\n      em: \"em\",\n      ol: \"ol\",\n      li: \"li\",\n      h2: \"h2\",\n      img: \"img\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"how-to-make-most-of-learn-to-code-from-zero-with-godot\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#how-to-make-most-of-learn-to-code-from-zero-with-godot\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"How to make most of Learn to Code From Zero With Godot\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"With this course, we make you a bold promise: \", _jsx(_components.strong, {\n          children: \"by the end, you'll have learned how to code and how to code games.\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"It doesn't mean you'll be an \", _jsx(_components.em, {\n          children: \"expert\"\n        }), \"; game development and programming are fields where you never stop learning.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"That's part of what makes them so fascinating: there are always new techniques to learn and new problems to solve. It's always fresh and challenging.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To become a professional or just proficient in code, you'll need \", _jsx(_components.strong, {\n          children: \"a lot of experience\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Our role is to give you all the foundations you need to keep growing independently and efficiently.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Now, the content in this course can only get you so far if you're \", _jsx(_components.em, {\n          children: \"passive\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"If you want to get great results and \", _jsx(_components.em, {\n          children: \"get every ounce of value\"\n        }), \" out of this course, you have to:\"]\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Do all the practices as they come in the course.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Read other students' questions and answers and ask your questions.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Practice daily (if you can).\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Complete the course.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"do-all-the-practices\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#do-all-the-practices\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Do all the practices\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Programming is a skill. So to get good at it, \", _jsx(_components.strong, {\n          children: \"you must practice\"\n        }), \". A lot.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We designed dozens of fun and varied assignments to get you to practice all sorts of aspects of programming.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/02.practice-system.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Each lesson builds on the ones before them to help you memorize them.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Be sure you don't go through the content quickly and superficially: doing all the steps and all the practices is the \", _jsx(_components.em, {\n          children: \"only way\"\n        }), \" for you to become good at programming.\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"read-and-ask-questions\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#read-and-ask-questions\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Read and ask questions\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Under every lesson, you will have the opportunity to ask questions.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/02.ask-a-question.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Whenever you have a doubt about a lesson or encounter a problem, you can first \", _jsx(_components.em, {\n          children: \"check if other students have asked already\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"And if not, you can ask a new question. We wrote a how-to guide: .\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"do-a-little-bit-daily\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#do-a-little-bit-daily\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Do a little bit daily\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you spread the work on the course and do a little bit every day, you'll create solid habits and maximize your learning.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We recommend practicing at least 30 minutes daily \", _jsx(_components.em, {\n          children: \"without any distractions\"\n        }), \". The more, the better.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you have very little free time, we recommend filling the tiniest gaps in your day with short learning sessions. Many practices and lessons are short enough you can make some progress in only ten minutes.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"follow-the-entire-course\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#follow-the-entire-course\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Follow the entire course\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You have to do every step in the course from start to finish to get everything out of it.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"I'm stating the obvious here, but we both know how hard it can be to follow an online course like that.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We wrote a companion guide about productivity to help you organize yourself and motivate you to keep going:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The next page, we'll explain our approach to teaching in this course. Feel free to skip it if you're not interested as this one's optional.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"How to make most of Learn to Code From Zero With Godot","slug":"how-to-make-most-of-learn-to-code-from-zero-with-godot","draft":false,"free":false}},"prev":{"title":"What you'll learn in the course","url":"/course/learn-to-code-from-zero-with-godot/introduction/what-you-ll-learn-in-the-course"},"next":{"title":"Our approach to teaching code","url":"/course/learn-to-code-from-zero-with-godot/introduction/our-approach-to-teaching-code"}},{"title":"Our approach to teaching code","slug":"our-approach-to-teaching-code","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/introduction/our-approach-to-teaching-code","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      h2: \"h2\",\n      em: \"em\",\n      ul: \"ul\",\n      li: \"li\",\n      h3: \"h3\",\n      img: \"img\",\n      strong: \"strong\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"our-approach-to-teaching-code\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#our-approach-to-teaching-code\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Our approach to teaching code\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This page is optional. We wrote it for those of you who'd like to understand how we approach teaching computer programming and why.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-root-problem\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#the-root-problem\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"The root problem\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We design every course and new format in response to our students' problems.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Countless beginners expressed their frustration over the years as they were looking to learn to make games \", _jsx(_components.em, {\n          children: \"with Godot\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Many teachers believe that a game engine is too complex of an environment to learn well, and we used to be part of them.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you teach a game engine straight away and move quickly, it's overwhelming. Your typical step-by-step tutorials often have this problem.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the past, our approach was to invite people to learn Python first and come to Godot with programming foundations already.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"coding-games-is-challenging-but-fun\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#coding-games-is-challenging-but-fun\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Coding games is challenging but fun\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Learning to program is difficult. Learning to code games is \", _jsx(_components.em, {\n          children: \"even more difficult\"\n        }), \" as it involves coding the mechanics, audio, art, performance, physics, and much more.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In theory, it's too much to take on all at once if you're just getting started.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"However, you never have to tackle it all at once: you can always \", _jsx(_components.em, {\n          children: \"break down the complexity\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"There's a lot to learn, yes. It'll take you \", _jsx(_components.em, {\n          children: \"time and practice\"\n        }), \" before you can make \", _jsx(_components.em, {\n          children: \"your\"\n        }), \" game.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"But at the same time, you'll get visual results early on and be able to share them with people around you. In this case, the motivation boost makes it worth embracing the complexity.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-problem-with-most-tutorials\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#the-problem-with-most-tutorials\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"The problem with most tutorials\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"There are a couple of ways in which most game programming tutorials leave beginners on the side:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"They focus on giving you steps to achieve a specific result more than on \", _jsx(_components.em, {\n            children: \"why\"\n          }), \" they do things in a certain way.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"They often cover the \", _jsx(_components.em, {\n            children: \"fundamentals\"\n          }), \" superficially.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"They don't teach the \", _jsx(_components.em, {\n            children: \"mindset\"\n          }), \" and work methods you need to become an independent and productive developer.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"That's in part because tutorial-makers tend to be young and inexperienced developers. Many teenagers and young students make tutorials as they learn the fundamentals themselves.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Also, many make tutorials as a way to get visibility or to make a quick buck. They don't particularly like to teach and tend to stop after a while.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The last reason is education is time-consuming and often undervalued.\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"how-we-can-do-better\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#how-we-can-do-better\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"How we can do better\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The following video exposes the problem, our mindset, and how we can help in greater detail.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.em, {\n          children: \"Click the image to watch it on YouTube.\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://youtu.be/yQZKXdwyh-Q\",\n          children: _jsx(_components.img, {\n            src: \"images/03.problem-with-most-gamedev-tutorials.png\",\n            alt: \"\"\n          })\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We dove into research on how we learn and memorize things for this course.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We've also been looking into user experience design: a field concerned with making your experience smoother by listening to your needs and feedback.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We use it more and more in the industry to make games more engaging and easier to learn. It turns out we can also apply its methods to education.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Instead of teaching with only step-by-step tutorials, we want to cycle between:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Step-by-step introductions.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Guides that give you more background and \\\"practical theory.\\\"\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Exercises that make you put everything into practice.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Rather than just using videos, which aren't great for learning to code, we want to use all the tools at our disposal to help you learn more efficiently.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If necessary, we will create new tools, like the GDScript Learn app.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We make the learning part smooth and exciting with short lessons, concrete exercises, and many toy programs.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"More importantly, we figured out a couple of teaching principles to ease your way into code:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Going from concrete first to more abstract (we use many abstractions in programming).\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Teaching pragmatic programming practices: translating ideas into what the computer needs to do.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Avoiding unnecessary abstractions. Meaning we favor the most straightforward and specific code that solves the problem at hand.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Writing in a way that's easy to read and clear even for younger students.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Breaking down the learning into small steps that respect your memory.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"I hope this helps get a sense of how we approach teaching in this course.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"how-youll-learn\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#how-youll-learn\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"How you'll learn\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"To become a game developer, you can't just follow step-by-step recipes. Tutorials can be a nice stepping stone, but they'll never make you an independent developer.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Game development is a creative problem-solving activity.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"As a game developer, you think of a game you want to make, its mechanics, and you \", _jsx(_components.em, {\n          children: \"figure out\"\n        }), \" the code based on your skills.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Please always keep in mind that your goal with this course is to build those necessary \", _jsx(_components.em, {\n          children: \"skills\"\n        }), \". And to build a skill, you must practice.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"That's why only \", _jsx(_components.em, {\n          children: \"you\"\n        }), \" can turn yourself into a great developer, through \", _jsx(_components.strong, {\n          children: \"deliberate practice\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"That's why the focus in this course isn't on step-by-step tutorials. We've made hundreds of them over the years and know their shortcomings all too well.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Instead, you'll learn this way:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Every project will start with a follow-along video to get the foundations down.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"It'll continue with text-based guides to focus a bit more on the code.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"You'll complete several practices right in Godot.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"We'll then give you extra lessons and cheatsheets to dive deeper and remember some key takeaways.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the next lesson, we'll talk about what you should expect from a programming course like this one.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Our approach to teaching code","slug":"our-approach-to-teaching-code","draft":false,"free":false}},"prev":{"title":"How to make most of Learn to Code From Zero With Godot","url":"/course/learn-to-code-from-zero-with-godot/introduction/how-to-make-most-of-learn-to-code-from-zero-with-godot"},"next":{"title":"Assembling your first game: introduction","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/assembling-your-first-game-introduction"}}]},{"title":"Assembling game","slug":"assembling-game","draft":false,"lessons":[{"title":"Assembling your first game: introduction","slug":"assembling-your-first-game-introduction","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/assembling-game/assembling-your-first-game-introduction","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      em: \"em\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"assembling-your-first-game-introduction\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#assembling-your-first-game-introduction\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Assembling your first game: introduction\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this first project, you'll assemble a game from premade components.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We developers use a divide and conquer approach to writing computer programs. Games are no exception.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We split the game into standalone components we can later combine to create the final experience. In a Zelda-like game, you'll typically create the moving character first, then a weapon, and attach the weapon to the character. Then, you'll design a map with walls and place the character on the map. And so on.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This approach keeps the complexity manageable. If you try to do everything at once, you'll soon get overwhelmed, and your productivity will suffer.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"With the following videos, our goal is to give you a sense of how a game is split into smaller chunks.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You will also see everything you'll learn to code throughout the course.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"By the end, you should be able to understand and reproduce everything you see on your own!\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.em, {\n          children: \"In video lessons, you can start by watching the video and then read the text. The text will generally explain new concepts covered in the video.\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Assembling your first game: introduction","slug":"assembling-your-first-game-introduction","draft":false,"free":false}},"prev":{"title":"Our approach to teaching code","url":"/course/learn-to-code-from-zero-with-godot/introduction/our-approach-to-teaching-code"},"next":{"title":"Importing the project and placing the player character","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/importing-the-project-and-placing-the-player-character"}},{"title":"Importing the project and placing the player character","slug":"importing-the-project-and-placing-the-player-character","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/assembling-game/importing-the-project-and-placing-the-player-character","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      h2: \"h2\",\n      em: \"em\",\n      code: \"code\",\n      img: \"img\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"importing-the-project-and-placing-the-player-character\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#importing-the-project-and-placing-the-player-character\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Importing the project and placing the player character\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this video, you'll learn to import the files we prepared for you into Godot and get started with the Godot game editor.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you don't have Godot on your computer yet, please use this guide to install it:\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"download-the-course-project-files\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#download-the-course-project-files\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Download the course project files\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can download the Godot project below this lesson text.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You'll see a folded section saying \", _jsx(_components.em, {\n          children: \"X Course files.\"\n        }), \" Click it to unfold it, then click the file names once to download each file.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"For this video series, you're looking for the file named \", _jsx(_components.code, {\n          children: \"godot-game-to-assemble-*.zip\"\n        }), \" (the * stands for the version number, like \", _jsx(_components.code, {\n          children: \"0.1.0\"\n        }), \").\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/02.course-downloads.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Then, please follow along with the video to import the project into Godot.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Importing the project and placing the player character","slug":"importing-the-project-and-placing-the-player-character","draft":false,"free":false}},"prev":{"title":"Assembling your first game: introduction","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/assembling-your-first-game-introduction"},"next":{"title":"Adding rooms and bridges","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/adding-rooms-and-bridges"}},{"title":"Adding rooms and bridges","slug":"adding-rooms-and-bridges","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/assembling-game/adding-rooms-and-bridges","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      h2: \"h2\",\n      h3: \"h3\",\n      em: \"em\",\n      img: \"img\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"adding-rooms-and-bridges\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#adding-rooms-and-bridges\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Adding rooms and bridges\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this video, we lay down a couple of rooms to set up our level. We use the grid and snapping to align them and connect them with bridges.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In the next one, we'll open a room and add pickups and a chest to it.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"troubleshooting\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#troubleshooting\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Troubleshooting\"]\n      }), \"\\n\", _jsxs(_components.h3, {\n        id: \"my-character-is-not-moving\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#my-character-is-not-moving\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"My character is not moving\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"After adding a room to your game, if it looks like the player is not moving, you should check the Scene dock in the top-left.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"If the rooms are nested inside the \", _jsx(_components.em, {\n          children: \"Player\"\n        }), \" node, as on the image below, they will move with the player, making it look like nothing's moving!\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/03.rooms-nested-in-player.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To solve this, click and drag each room node onto the \", _jsx(_components.em, {\n          children: \"Main\"\n        }), \" node. That will reparent the nodes as children of the \", _jsx(_components.em, {\n          children: \"Main\"\n        }), \" node.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/03.reparenting-nodes.gif\",\n          alt: \"\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Adding rooms and bridges","slug":"adding-rooms-and-bridges","draft":false,"free":false}},"prev":{"title":"Importing the project and placing the player character","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/importing-the-project-and-placing-the-player-character"},"next":{"title":"Steering the ship smoothly","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/undefined"}},{"title":"Steering the ship smoothly","slug":"steering-the-ship-smoothly","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/assembling-game/undefined","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      img: \"img\",\n      em: \"em\",\n      pre: \"pre\",\n      code: \"code\",\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"steering-the-ship-smoothly\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#steering-the-ship-smoothly\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Steering the ship smoothly\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this lesson, we will make our ship move much smoother using steering\\nbehaviors.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/00.ship-with-steering.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Steering behaviors are calculations that allow you to make characters\\nand AI's move smoothly with generally little code. They lead to a\\nnatural motion and smooth curves.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Currently, in every frame, we instantly change the velocity. The ship\\nmoves at maximum speed when the player presses a direction key. If the\\nplayer releases the key, the ship stops.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/02.ship-with-input.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We want the ship to accelerate and decelerate smoothly instead. To do\\nso, we will use \", _jsx(_components.em, {\n          children: \"steering behaviors\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Steering behaviors are a category of algorithms we use to make objects\\nmove smoothly. Steering behaviors use vector calculations to make\\nobjects \", _jsx(_components.em, {\n          children: \"steer\"\n        }), \" towards a target position.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The first steering algorithm we'll see is the simplest: it only takes\\ntwo or three lines of code and can improve movement immensely.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsxs(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" direction\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" velocity\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+=\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" drag_factor\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We'll break it down below.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-follow-steering-behavior\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#the-follow-steering-behavior\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"The follow steering behavior\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This steering behavior gradually changes the ship's velocity to move\\ntowards a target.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"It works by calculating what we call the \\\"desired velocity.\\\" That's the\\nship going instantly at the max speed in the input direction. We\\n\\\"compare\\\" that with the current velocity.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We can represent the current and desired velocity vectors like so.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/04.desired-and-current-velocity-vectors.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Imagine the ship is going towards the left, and the player presses the\\nright key. How do we make the ship steer towards the right?\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We start by calculating the difference between the two velocities.\\nThat's what we call the steering vector.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/04.steering-vector.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To make the ship turn smoothly, instead of moving at the desired\\nvelocity, every frame, we add a small portion of the steering vector to\\nthe current velocity. Doing so makes the ship gradually \", _jsx(_components.em, {\n          children: \"steer\"\n        }), \" towards\\nthe target velocity.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/04.steering-vectors-demo.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"So far, in our code, we calculate the velocity with a single line.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsxs(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"func\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"_process\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"delta\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"float\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"->\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"void\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# ...\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" direction \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" speed\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsxs(_components.em, {\n          children: [\"Note: When we write \", _jsx(_components.code, {\n            children: \"#...\"\n          }), \" in code, it means that in the complete code,\\nthere are more lines. We use \", _jsx(_components.code, {\n            children: \"#...\"\n          }), \" as an ellipsis to help you focus on\\nsome important code in a lesson.\"]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this new version, we replace the line above with three lines of code\\nand an extra variable:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsxs(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" drag_factor \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0.1\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"func\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"_process\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"delta\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"float\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"->\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"void\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# ...\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" direction\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" velocity\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+=\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" drag_factor\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# ...\"\n            }), \"\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We first calculate the desired velocity: the ship moving at the maximum\\nspeed in the input direction.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsx(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" direction\\n\"]\n          })\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We then calculate the difference between the desired velocity and the\\ncurrent one.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsx(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" velocity\\n\"]\n          })\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Note that the order in which you put the vectors matters a lot as\\nvectors have a direction. The ship will move away from the target if you\\nreverse the two terms.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsx(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+=\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" drag_factor\\n\"]\n          })\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We add a portion of this steering vector to the current velocity on the\\nthird line. It makes the \", _jsx(_components.code, {\n          children: \"velocity\"\n        }), \" change every frame, making our ship\\naccelerate and decelerate depending on our input.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To add only a portion of the steering vector every frame, you multiply\\nthe value \", _jsx(_components.code, {\n          children: \"steering_vector\"\n        }), \" by a small number. Anywhere between \", _jsx(_components.code, {\n          children: \"0.01\"\n        }), \"\\nand \", _jsx(_components.code, {\n          children: \"0.3\"\n        }), \" should work well.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The lower the value, the more inertia the ship will have: it will turn,\\naccelerate, and decelerate much slower. Here is the ship with a\\n\", _jsx(_components.code, {\n          children: \"drag_factor\"\n        }), \" of \", _jsx(_components.code, {\n          children: \"0.05\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/04.ship-steering-low-damp-factor.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The higher the value, the more reactive the ship will be: it will turn\\nsharply, get to its maximum speed quickly, and stop in a split second.\\nHere's the ship moving with a \", _jsx(_components.code, {\n          children: \"drag_factor\"\n        }), \" of \", _jsx(_components.code, {\n          children: \"0.3\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/04.ship-steering-high-damp-factor.gif\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Still, the motion will always feel much smoother than always moving at\\nmax speed with this steering algorithm.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"practice-making-the-ship-steer\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#practice-making-the-ship-steer\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Practice: Making the ship steer\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"In the Godot practices project, open the fourth scene, \", _jsx(_components.em, {\n          children: \"Making the ship\\nsteer.\"\n        })]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Requirements:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"The ship should move smoothly using the steering equation we saw\\nhere.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"You need to calculate and use both the ship's desired velocity and\\nthe steering vector.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"the-code\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#the-code\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"The code\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"These steering equations are widely used in professional games. This\\nlesson shows only the basic principle, but you will see in the course\\nthat we can push steering behaviors further to code impressive AI\\nmovement.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Here's the complete code for the steering ship, including the boost\\nmechanic you coded before.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsxs(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"extends\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Sprite\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" boost_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1500.0\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" normal_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"600.0\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" normal_speed\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"Vector2\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" drag_factor \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0.1\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"func\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"_process\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"delta\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"float\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"->\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"void\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" direction \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" Input\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"get_vector\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"move_left\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"move_right\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"move_up\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"move_down\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" Input\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"is_action_just_pressed\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"boost\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" boost_speed\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"get_node\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"Timer\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"start\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" direction\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" desired_velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" velocity\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+=\"\n            }), \" steering_vector \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" drag_factor\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    position \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+=\"\n            }), \" velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" delta\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    rotation \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" velocity\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"angle\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"func\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"_on_Timer_timeout\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"->\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"void\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    max_speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" normal_speed\\n\"]\n          })]\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Steering the ship smoothly"}},"prev":{"title":"Adding rooms and bridges","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/adding-rooms-and-bridges"},"next":{"title":"Our coding style","url":"/course/learn-to-code-from-zero-with-godot/annex/our-coding-style"}}]},{"title":"Annex","slug":"annex","draft":false,"lessons":[{"title":"Our coding style","slug":"our-coding-style","free":false,"draft":false,"url":"/course/learn-to-code-from-zero-with-godot/annex/our-coding-style","serializedMDX":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      p: \"p\",\n      ul: \"ul\",\n      li: \"li\",\n      h2: \"h2\",\n      em: \"em\",\n      pre: \"pre\",\n      code: \"code\",\n      ol: \"ol\",\n      img: \"img\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.h1, {\n        id: \"our-coding-style\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#our-coding-style\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Our coding style\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This document explains some choices we made in our coding style.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Mainly:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Why some variable names have a leading underscore.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Why we use type hints.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Why some of our comments have two hash signs (##) instead of one.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We follow many more rules and conventions to keep our code consistent and hopefully easy to read.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can find all our code guidelines here: \", _jsx(_components.a, {\n          href: \"https://www.gdquest.com/docs/guidelines/best-practices/godot-gdscript/\",\n          children: \"GDQuest GDScript guidelines\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"variable-names-with-a-leading-underscore\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#variable-names-with-a-leading-underscore\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Variable names with a leading underscore\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Many of our property names have a leading underscore.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"This is a convention we borrowed from \", _jsx(_components.em, {\n          children: \"Python\"\n        }), \": as GDScript doesn't have private variables, we use a leading underscore to tell our teammates they're pseudo-private.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In other words, a variable with a leading underscore means it's not intended for use outside this class.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Some examples of variable names:\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-gdscript\",\n        children: _jsxs(_components.code, {\n          className: \"language-gdscript code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# We expose the speed for both read and write access.\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" speed \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"500.0\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# The velocity is for use inside this class only.\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" _velocity \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":=\"\n            }), \" Vector2\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"ZERO\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# We store a reference to a child node, but only this script uses this\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"# reference.\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"onready\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"var\"\n            }), \" _enemy_detector\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Area2D\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token variable\",\n              children: \"$EnemyDetector\"\n            }), \"\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Technically, in GDScript, as in \", _jsx(_components.em, {\n          children: \"Python\"\n        }), \", you can always access all variables. In Godot, you can get a reference to any node inside your scene tree.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This can cause more harm than good as it gives you a lot of room to do things that'll backfire, like accessing nodes in unintuitive ways.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"At GDQuest, we use conventions like the leading underscore to limit problems, along with many other coding guidelines.\"\n      }), \"\\n\", _jsxs(_components.h2, {\n        id: \"type-hints\",\n        children: [_jsx(_components.a, {\n          className: \"header-link\",\n          href: \"#type-hints\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Type hints\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"GDScript is a gradually-typed language, meaning you're free to write fully dynamic code or to specify types for your variables and functions.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"We use types as much as possible. For example, instead of \", _jsx(_components.code, {\n          children: \"func _process(delta):\"\n        }), \", we use \", _jsx(_components.code, {\n          children: \"func _process(delta: float) -> void:\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The colon after the \", _jsx(_components.code, {\n          children: \"delta\"\n        }), \" argument specifies the variable's type, while the arrow tells Godot the function's return type: here, nothing.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"When defining a new variable, the GDScript compiler can often infer the variable's type if you write \", _jsx(_components.code, {\n          children: \":=\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Why bother? There are large benefits to using types:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"The compiler will catch many errors as you type the code. It can't catch most of those without type hints.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"You get much better autocompletion in most situations.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Your code contains more information for you and your teammates, helping everyone understand it better.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"From Godot 4, using types leads to better performance than dynamic code, up to twice as fast.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"All that for a little more typing.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Note that there's a handy editor setting to have Godot autocomplete type hints whenever possible. To get that:\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Head to the \", _jsx(_components.em, {\n            children: \"Editor -> Editor Settings...\"\n          })]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"In the search bar, enter \\\"type hints\\\"\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"In the \", _jsx(_components.em, {\n            children: \"Completion\"\n          }), \" section, turn on the checkbox next to \", _jsx(_components.em, {\n            children: \"Add Type Hints\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"images/add-type-hints.png\",\n          alt: \"\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can learn more about optional typing and its benefits in our \", _jsx(_components.a, {\n          href: \"https://www.gdquest.com/tutorial/godot/gdscript/typed-gdscript/\",\n          children: \"guide to using type hints in GDScript\"\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Our coding style","slug":"our-coding-style","draft":false,"free":false}},"prev":{"title":"Steering the ship smoothly","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/undefined"},"next":null}]}],"toc":[{"title":"Introduction","slug":"introduction","lessons":[{"title":"What you'll learn in the course","slug":"what-you-ll-learn-in-the-course","url":"/course/learn-to-code-from-zero-with-godot/introduction/what-you-ll-learn-in-the-course","draft":false,"free":true},{"title":"How to make most of Learn to Code From Zero With Godot","slug":"how-to-make-most-of-learn-to-code-from-zero-with-godot","url":"/course/learn-to-code-from-zero-with-godot/introduction/how-to-make-most-of-learn-to-code-from-zero-with-godot","draft":false,"free":false},{"title":"Our approach to teaching code","slug":"our-approach-to-teaching-code","url":"/course/learn-to-code-from-zero-with-godot/introduction/our-approach-to-teaching-code","draft":false,"free":false}]},{"title":"Assembling game","slug":"assembling-game","lessons":[{"title":"Assembling your first game: introduction","slug":"assembling-your-first-game-introduction","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/assembling-your-first-game-introduction","draft":false,"free":false},{"title":"Importing the project and placing the player character","slug":"importing-the-project-and-placing-the-player-character","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/importing-the-project-and-placing-the-player-character","draft":false,"free":false},{"title":"Adding rooms and bridges","slug":"adding-rooms-and-bridges","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/adding-rooms-and-bridges","draft":false,"free":false},{"title":"Steering the ship smoothly","slug":"steering-the-ship-smoothly","url":"/course/learn-to-code-from-zero-with-godot/assembling-game/undefined","draft":false,"free":false}]},{"title":"Annex","slug":"annex","lessons":[{"title":"Our coding style","slug":"our-coding-style","url":"/course/learn-to-code-from-zero-with-godot/annex/our-coding-style","draft":false,"free":false}]}],"firstChapterUrl":"/course/learn-to-code-from-zero-with-godot/introduction/what-you-ll-learn-in-the-course"}}